%!PS-Adobe-1.0
%%Title: ServerThread.java
%%Creator: nenscript v1.13++ (US version) 24-November-1992
%%For: chris
%%CreationDate: Mon Jun  2 22:03:10 1997
%%DocumentFonts: Courier Courier-Bold 
%%Pages: (atend)
%%EndComments
/newcodes	% foreign character encodings
[
160/space 161/exclamdown 162/cent 163/sterling 164/currency
165/yen 166/brokenbar 167/section  168/dieresis 169/copyright
170/ordfeminine 171/guillemotleft 172/logicalnot 173/hyphen 174/registered
175/macron 176/degree 177/plusminus 178/twosuperior 179/threesuperior
180/acute 181/mu 182/paragraph  183/periodcentered 184/cedilla
185/onesuperior 186/ordmasculine 187/guillemotright 188/onequarter
189/onehalf 190/threequarters 191/questiondown 192/Agrave 193/Aacute
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave  205/Iacute
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute
212/Ocircumflex 213/Otilde  214/Odieresis 215/multiply 216/Oslash
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde
228/adieresis 229/aring 230/ae 231/ccedilla  232/egrave 233/eacute
234/ecircumflex 235/edieresis 236/igrave 237/iacute 238/icircumflex
239/idieresis 240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex
245/otilde 246/odieresis 247/divide 248/oslash 249/ugrave  250/uacute
251/ucircumflex 252/udieresis 253/yacute 254/thorn 255/ydieresis
] def

/reencdict 12 dict def



    % change fonts using ISO Latin1 characters
/ChgFnt		% size psname natname  =>  font
{
    dup FontDirectory exch known	% is re-encoded name known?
    { exch pop }			% yes, get rid of long name
    { dup 3 1 roll ReEncode } ifelse	% no, re-encode it
    findfont exch scalefont setfont
} def

/ReEncode	%
{
    reencdict begin
	/newname exch def
	/basename exch def
	/basedict basename findfont def
	/newfont basedict maxlength dict def
	basedict
	{ exch dup /FID ne
	    { dup /Encoding eq
		{ exch dup length array copy newfont 3 1 roll put }
		{ exch newfont 3 1 roll put } ifelse
	    }
	    { pop pop } ifelse
	} forall
	newfont /FontName newname put
	newcodes aload pop newcodes length 2 idiv
	{ newfont /Encoding get 3 1 roll put } repeat
	newname newfont definefont pop
    end
} def

1 100 div dup scale
/#copies 1 def
/BodyF { 1000 /Courier /Courier-Latin1 ChgFnt } def
/CW BodyF ( ) stringwidth pop def
/Titlef {  1000 /Courier-Bold /Courier-Bold-Latin1 ChgFnt } def
/K         { -2 CW mul add exch moveto (+) show } def
/L         { CW mul add exch moveto show } def
/T         { exch moveto show } def
/M         { CW mul 0 rmoveto } def
/Centre    { dup stringwidth pop 2 div neg 0 rmoveto } def
/StartPage { /SavedPage save def
  0 setgray Titlef 2500 75700 moveto show 8 M (Mon Jun  2 22:03:10 1997) show 8 M show
  BodyF 0 setgray } def
/EndPage   {showpage SavedPage restore } def
%%EndProlog
%%Page: 1 1
(1) (ServerThread.java) StartPage
(1:/******************************************************************) 73700 2500 6 L
(2:                Christopher D. Cavello) 72600 2500 6 L
(3:                May 21, 1997) 71500 2500 6 L
(4:                ee 701) 70400 2500 6 L
(5:                project 2) 69300 2500 6 L
(6:*******************************************************************/) 68200 2500 6 L
(7:) 67100 2500 6 L
(8:/*) 66000 2500 6 L
(9: *  server: add your code serverthread) 64900 2500 6 L
(10: */) 63800 2500 5 L
(11:) 62700 2500 5 L
(12:import java.util.*;) 61600 2500 5 L
(13:import java.net.*;) 60500 2500 5 L
(14:import java.io.*;) 59400 2500 5 L
(15:import java.lang.*; ) 58300 2500 5 L
(16:) 57200 2500 5 L
(17:) 56100 2500 5 L
(18:class ServerThread extends Thread ) 55000 2500 5 L
(19:{) 53900 2500 5 L
(20:  Socket socket = null;) 52800 2500 5 L
(21:  ServerThread\(Socket socket\) ) 51700 2500 5 L
(22:  {) 50600 2500 5 L
(23:    super\("ServerThread"\);) 49500 2500 5 L
(24:    this.socket=socket;) 48400 2500 5 L
(25:  }) 47300 2500 5 L
(26:  public void run\(\) ) 46200 2500 5 L
(27:  {) 45100 2500 5 L
(28:    try ) 44000 2500 5 L
(29:    {) 42900 2500 5 L
(30:      DataInputStream in = new DataInputStream\(new BufferedInputStream\(socket.getInpu) 41800 2500 5 L
40700 2500 K (tStream\(\)\)\);) 40700 2500 T
(31:      PrintStream out = new PrintStream\(new BufferedOutputStream\(socket.getOutputStre) 39600 2500 5 L
38500 2500 K (am\(\), 1024\), false\);) 38500 2500 T
(32:      String inputLine,outputLine;) 37400 2500 5 L
(33:      int seconds, minutes, hours, year, dayofmonth;) 36300 2500 5 L
(34:      String ddmmyy, month, day;) 35200 2500 5 L
(35:      String Day[] = {"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Sa) 34100 2500 5 L
33000 2500 K (turday"};) 33000 2500 T
(36:      String Month[] = {"January","February","March","April","May","June",) 31900 2500 5 L
(37:                        "July","August","September","October","November","December"};) 30800 2500 5 L
(38:      while  \(\(inputLine = in.readLine\(\)\) != null\) ) 29700 2500 5 L
(39:      {) 28600 2500 5 L
(40:        Date now=new Date\(\);) 27500 2500 5 L
(41:        hours=now.getHours\(\);) 26400 2500 5 L
(42:        minutes=now.getMinutes\(\);) 25300 2500 5 L
(43:        seconds=now.getSeconds\(\);) 24200 2500 5 L
(44:        day=  Day[now.getDay\(\)] ;  // convert 0-6 into a day of the week) 23100 2500 5 L
(45:        month=Month[now.getMonth\(\)];  // convert 0-11 into a month of the year) 22000 2500 5 L
(46:        year=now.getYear\(\);) 20900 2500 5 L
(47:        dayofmonth=now.getDate\(\);) 19800 2500 5 L
(48:        /* some of the above lines from Javasoft's  "Clock.java" program   */) 18700 2500 5 L
(49:        /* some of below line \(hours and minutes and AM/PM\) borrowed from a friend's ) 17600 2500 5 L
16500 2500 K (web page  */) 16500 2500 T
(50:        outputLine="" + \(\(hours >12\) ? hours -12 : hours\) + \(\(minutes <10\) ? ":0" : ") 15400 2500 5 L
14300 2500 K (:"\) + minutes) 14300 2500 T
(51:            + \(\(seconds <10\) ? ":0" : ":"\) + seconds + \(\(hours >=12\)  ? " PM" : " AM") 13200 2500 5 L
12100 2500 K (\) + "   ") 12100 2500 T
(52:            + day + ", " + month+ " " +dayofmonth + ", 19"+\(year\) ;) 11000 2500 5 L
(53:        if \(inputLine.equals\("Time?"\)\)  //  See the "KnockKnock" examples too) 9900 2500 5 L
(54:        {) 8800 2500 5 L
(55:          out.println\(outputLine\);) 7700 2500 5 L
(56:          out.flush\(\);) 6600 2500 5 L
(57:        }) 5500 2500 5 L
(58:      }  /* end of while loop  */) 4400 2500 5 L
EndPage
%%Page: 2 2
(2) (ServerThread.java) StartPage
(59:      out.close\(\);) 73700 2500 5 L
(60:      in.close\(\);) 72600 2500 5 L
(61:      socket.close\(\);) 71500 2500 5 L
(62:    } ) 70400 2500 5 L
(63:    catch \(IOException e\) ) 69300 2500 5 L
(64:    {) 68200 2500 5 L
(65:      e.printStackTrace\(\);) 67100 2500 5 L
(66:    }) 66000 2500 5 L
(67:) 64900 2500 5 L
(68:  }  /* end of "public void run\(\)"  */) 63800 2500 5 L
(69:}  /* end of "class ServerThread extends Thread" */) 62700 2500 5 L
EndPage
%%Trailer
%%Pages: 2
